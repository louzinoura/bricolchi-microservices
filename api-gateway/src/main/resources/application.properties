# Gateway Configuration
spring.application.name=api-gateway
server.port=8080

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Force specific IP registration
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=192.168.1.41
eureka.instance.hostname=192.168.1.41
eureka.instance.instance-id=${eureka.instance.ip-address}:${spring.application.name}:${server.port}

# Activer le routage automatique (via les noms des services dans Eureka)
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Routes personnalisées (optionnelles mais utiles pour des chemins clairs)
spring.cloud.gateway.routes[0].id=geo-service
spring.cloud.gateway.routes[0].uri=lb://geo-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/geo/**

spring.cloud.gateway.routes[1].id=annonce-service
spring.cloud.gateway.routes[1].uri=lb://annonce-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/annonce,/api/annonce/**

spring.cloud.gateway.routes[2].id=booking-service
spring.cloud.gateway.routes[2].uri=lb://booking-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bookings/**

spring.cloud.gateway.routes[3].id=auth-service
spring.cloud.gateway.routes[3].uri=lb://auth-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/users/register
spring.cloud.gateway.routes[3].predicates[1]=Path=/api/users/login

spring.cloud.gateway.routes[4].id=suivie-service
spring.cloud.gateway.routes[4].uri=lb://suivie-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/tracking/**


# Enable Actuator
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true

# Optional: Enable automatic service discovery routes
# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Debug logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.cloud.loadbalancer=DEBUG